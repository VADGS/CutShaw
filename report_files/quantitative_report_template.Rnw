% 
\documentclass[12pt]{article}
\usepackage{Sweave}
\usepackage{pdflscape}
\usepackage{geometry}
\geometry{letterpaper, portrait, margin=1in}
\newgeometry{top=0.9in,bottom=0.9in}
\SweaveOpts{height=6,width=10,echo=FALSE}
\setkeys{Gin}{width=6in}
\usepackage[format=hang,font=small,labelfont=bf]{caption}
\usepackage[dvipsnames]{xcolor}

\title{WGS Competency Assessment Report\protect\\[0.2in]"Title goes here"}

\begin{document}
\maketitle

<<echo=FALSE>>=

#----------------------
# Defaults
#----------------------

organisms <- c("Salmonella enterica subsp. enterica serovar Enteritidis",
               "Salmonella enterica subsp. enterica serovar Enteritidis",
               "Salmonella enterica subsp. enterica serovar Typhimurium",
               "Salmonella enterica subsp. enterica serovar Newport",
               "Listeria monocytogenes",
               "Listeria monocytogenes")          
isolate.ids <- c("SAP18-0432","SAP18-H9654","SAP18-6199","SAP18-8729",
   "LMP18-H2446","LMP18-H8393")
read.depth.thresh <- 20
read.qual.thresh <- 30

#----------------------
# Input Files
#----------------------

library("optparse")

option_list = list(
  make_option(c("-s", "--seq"), type="character", default="./seq_results.tsv", 
              help="sequence results file [default= %default]", metavar="character"),
  make_option(c("-S", "--seqstats"), type="character", default="./seq_stats.tsv", 
              help="sequence statistics file [default= %default]", metavar="character")
); 

opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);
seq.stats.file <- opt$seqstats
seq.results.file <- opt$seq

seq.stats <- read.delim(seq.stats.file,header=T,sep = "\t",stringsAsFactors=F,
  colClasses = c(rep("character", 3),rep("numeric", 6)))
  # Cols - IsolateID,Genus,Metric,LowerBound,Q1,Median,Q3,UpperBound,Threshold
seq.results <- read.delim(seq.results.file,header=T,sep = "\t",stringsAsFactors=F,
  colClasses = c(rep("character", 11), rep("integer", 2), "character", rep("numeric", 4), 
  rep("integer", 2), "numeric", "integer", "numeric", rep("integer", 3), rep("character", 3)))
  # Cols - SampleID,IsolateID,Organism,Genus,Sequencer,Machine,FlowCell,LibKit,Chemistry,
  # RunDate,SequencedBy,SamplesPerRun,Reads,SeqLength,MeanForReadQual,MeanRevReadQual,
  # PercMapped,MeanDepth,CovLT10,SNPs,MeanInsert,NG50,GenomeFraction,Contigs,
  # LengthDelta,UnalignedLength,MostAbundantOrganism,Misannotated,Coverage

#----------------------
# Prep Datasets
#----------------------

#### Prep seq.results ####
ordered.isolates <- NULL
for (i in isolate.ids) {
  if (i %in% unique(seq.results$IsolateID)) {
    ordered.isolates <- c(ordered.isolates, i)
  }
}
seq.results$IsolateID <- factor(seq.results$IsolateID,levels=ordered.isolates,ordered=T)

# Prepare Run labels (2nd field of FlowCell)
seq.results$Run<-as.character(gsub("000000000-", "\\1" ,seq.results$FlowCell))

#### Prep seq.stats ####
seq.stats <- seq.stats[which(seq.stats$IsolateID %in% unique(seq.results$IsolateID)),]

@


\section{Overview}
\setlength\floatsep{0pt}
\setlength\intextsep{0pt}

This report provides an analytical evaluation of sequencing metrics for bacterial whole genome sequencing data comprising a sequencing competency assessment exercise. Sequence metrics have been compared to expected values based on recommended data submission thresholds or derived from the distribution of isolates sequenced during the 2018 PulseNet-GenomeTrakr harmonized Proficiency Testing (PT) exercise as part of a 16-sample 2X250 run on an Illumina MiSeq machine (V2 chemistry) using the Nextera XT DNA Library Prep Kit. 
\vspace{20pt}
<<label=xtable1,echo=FALSE,results=tex>>=

#---------------------------
# Table 1 - PT isolates
#---------------------------

library(xtable)
isolates <- matrix(c(isolate.ids,organisms),ncol=2,byrow=F)
colnames(isolates) <- c("Isolate ID","Organism")
rownames(isolates) <- c(1:length(isolate.ids))
isolates <- as.table(isolates)
next.table <- 1
print(xtable(isolates, caption = "The 2018 PT isolates.", 
  label = "tab:one"), scalebox=0.8, caption.placement = "bottom")
next.table <- next.table + 1
@
\vspace{20pt}
<<label=xtable2,echo=FALSE,results=tex>>=

#------------------------------
# Table 2 - Focal Isolates
#------------------------------

sorted.isolates <- seq.results[order(seq.results$Run,seq.results$SampleID),]
attach(sorted.isolates)
annotations <- matrix(c(SampleID,as.character(IsolateID),Machine,Run),ncol=4,byrow=F)
colnames(annotations) <- c("Sample ID","Isolate ID","Machine","Flowcell")
rownames(annotations) <- c(1:length(sorted.isolates$SampleID))
annotations <- as.table(annotations)
print(xtable(annotations, caption = "Isolates submitted for analysis.", 
  label = paste("tab:", next.table, sep="")), 
  scalebox=0.8, caption.placement = "bottom")
next.table <- next.table + 1
detach(sorted.isolates)

@


\section{Results}

<<echo=FALSE,results=tex>>=

#------------------------------
# Create Tables - Competency Assessment Isolates
#------------------------------

# Multiple tables are created if multiple runs are present
# Table output is stored in the following loop and printed later
# Metric failures are tracked in the following loop

unique.runs <- unique(seq.results$Run)
caption <- "Competency Assessment Metrics - Quantitative Results."
n.table <- next.table       # store current table number
fails <- NULL               # track failures
metric.order <- seq(1:7)
names(metric.order) <- c("Taxonomy","MeanDepth","MeanInsert","MeanR1Qual","MeanR2Qual","NG50","Contigs")
comp.tables <- list()

for (run in unique.runs) {
 
  comp.df <- seq.stats[which(seq.stats$Metric %in% c("MeanDepth","MeanInsert",
    "MeanR1Qual","MeanR2Qual","NG50","Contigs")),c("IsolateID","Metric","Threshold")]
  comp.df <- comp.df[which(comp.df$IsolateID %in% unique(seq.results$IsolateID[which(seq.results$Run==run)])),]
  
  for (i in 1:length(comp.df$IsolateID)) {

    isolate.df <- seq.results[which(seq.results$IsolateID == comp.df$IsolateID[i] & seq.results$Run==run),]
    comp.df$SampleID[i] <- isolate.df$SampleID
    comp.df$OrigValue[i] <- as.numeric(isolate.df[comp.df$Metric[i]])
    comp.df$Order <- as.numeric(metric.order[comp.df$Metric[i]])
    if (comp.df$Metric[i] == "Contigs") {
      if (comp.df$OrigValue[i] > comp.df$Threshold[i]) {
        comp.df$Value[i] <- paste("red", comp.df$OrigValue[i], "red", sep='')
        fails <- c(fails, isolate.df$SampleID)
      } else {
        comp.df$Value[i] <- paste("green", comp.df$OrigValue[i], "green", sep='')
      }
    } else if (comp.df$OrigValue[i] < comp.df$Threshold[i]) { 
      comp.df$Value[i] <- paste("red", comp.df$OrigValue[i], "red", sep='')
      fails <- c(fails, isolate.df$SampleID)
    } else {
      comp.df$Value[i] <- paste("green", comp.df$OrigValue[i], "green", sep='')
    }  
  }
  
  for (id in unique(comp.df$IsolateID)) {
    isolate.df <- seq.results[which(seq.results$IsolateID == id & seq.results$Run==run),]
    if (isolate.df$Reads < 100000) {
      taxonomy.row <- c(id, "Taxonomy", "PASS", isolate.df$SampleID, "Undetermined", 1, "Undetermined") 
    } else if (isolate.df$Misannotated == "FALSE") {
      taxonomy.row <- c(id, "Taxonomy", "PASS", isolate.df$SampleID, "PASS", 1, "greenPASSgreen") 
    } else {
      taxonomy.row <- c(id, "Taxonomy", "PASS", isolate.df$SampleID, "FAIL", 1, "redFAILred") 
    }
    comp.df <- rbind(comp.df, taxonomy.row)
  }  

  comp.df$Threshold <- as.character(comp.df$Threshold)
  comp.df <- comp.df[order(comp.df$SampleID,comp.df$Order),]

  comp.matrix <- as.matrix(comp.df[,c("SampleID","IsolateID","Metric","Threshold","Value")],ncol=6,byrow=F)
  colnames(comp.matrix) <- c("SampleID", "Isolate ID", "Metric", "Threshold", "Value")
  comp.table <- as.table(comp.matrix)
  comp.table.out <- capture.output(print(xtable(comp.table, caption = caption, 
    label = paste("tab:", next.table, sep="")), 
    scalebox=0.8, caption.placement = "bottom",include.rownames=FALSE))
  comp.table.out <- gsub("(\\s|^)green(.+)green", "\\1\\\\textcolor{green}{\\\\textbf{\\2}}", comp.table.out)
  comp.table.out <- gsub("(\\s|^)red(.+)red", "\\1\\\\textcolor{red}{\\\\textbf{\\2}}", comp.table.out)  

  comp.tables <- append(comp.tables, comp.table.out) 
   
  # Prepare for next table if multiple runs are present
  caption <- "Competency Assessment Metrics - Quantitative Results (Continued)."
  next.table <- paste(next.table, " - cont.", sep='')
  n.table <- n.table + 1
}
next.table <- n.table

#---------------------------------------------------------
# Calculate percent of focal isolates which passed checks
#---------------------------------------------------------

uniq.fails <- length(unique(fails))
total.isolates <- length(seq.results$IsolateID)
passed.isolates <- total.isolates - uniq.fails
perc.passed <- round((passed.isolates / total.isolates * 100))

#-----------------------------------------
# Print results summary
#-----------------------------------------

cat(paste("Of the ", total.isolates, " isolates submitted as part of this exercise, ", passed.isolates, " (", perc.passed, "\\%) were determined to be correctly annotated and to have fully met the analytical expectations of this exercise.\n", sep="")) 
@


\newpage
\newgeometry{top=0.8in,bottom=0.9in}
\subsection{Competency Assessment Metrics}
\begin{small}
<<echo=FALSE,results=tex>>=

#-------------------------------
# Competency Assessment Metrics
#-------------------------------

desc <- "The following metrics are under evaluation in this competency assessment -\n
$\\bullet$\\textbf{ Taxonomy} - the accuracy of the taxonomic annotation.\n
$\\bullet$\\textbf{ MeanDepth} - the mean depth of coverage.\n
$\\bullet$\\textbf{ MeanInsert} - the mean length of the sequence between the adapters.\n
$\\bullet$\\textbf{ MeanR1Qual} - the mean R1 read quality scores (forward reads).\n
$\\bullet$\\textbf{ MeanR2Qual} - the mean R2 read quality scores (reverse reads).\n
$\\bullet$\\textbf{ NG50} - a metric describing the distribution of contig lengths.\n
$\\bullet$\\textbf{ Contigs} - the total number of contigs in the assembly.\n"

cat(desc)
@

\vspace*{15pt}

<<echo=FALSE,results=tex>>=

#---------------------------------------------------------
# Print Table 3 (or more) - Competency Assessment Metrics
#---------------------------------------------------------

for (t in comp.tables) {
  cat(t, sep="\n")
}  

@
\end{small}
\end{document}

          
